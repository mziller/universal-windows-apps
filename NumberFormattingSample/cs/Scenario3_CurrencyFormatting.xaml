<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
--> 
<Page x:Class="NumberFormatting.Scenario3_CurrencyFormatting"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="RootGrid" Margin="12,20,12,12">
            <ScrollViewer>
                <StackPanel>
                    <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                    <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                <Run>
                    This example demonstrates how to format a number as a currency. An
                    application using this approach to format a number as a currency will be
                    returned a string that is formatted to match the user's preferences. An
                    application can also choose to override the user's language preferences
                    and will be returned a string properly formatted for that override.
                </Run>
                <LineBreak/>
                <LineBreak/>
                <Run>
                    The various options available for this formatting option are illustrated below
                    including specifying the number of integer or fractional digits and with or
                    without grouping separators.
                    Unlike other number formatting, there is no default currency assumed
                    and it must be explicitly specified.
                    This is because currency associated with the number provides essential context to the value.
                </Run>
                    </TextBlock>
                    <Button Content="Display" Click="Display_Click" Margin="0,10,0,0" />
                    <TextBlock x:Name="OutputTextBlock"  Margin="0,10,0,0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}"/>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>