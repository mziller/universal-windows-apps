<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the Microsoft Public License.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="Lamp.Scenario3_AvailabilityChanged"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Lamp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                A lamp application should handle unsolicited device state change events if acquired lamp
                device is involuntarily evicted or becomes available again. This can occur when the lamp is in use by another application.
                </TextBlock>
            </StackPanel>

            <StackPanel Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Button Content="Register for AvailablityChanged Event" Click="RegisterBtn_Click"/>
                    <Button Content="Unregister for AvailablityChanged Event" Click="UnRegisterBtn_Click"/>
                <ToggleSwitch Name="lampToggle" OnContent="Lamp On" OffContent="Lamp Off" Toggled="lampToggle_Toggled"/>
            </StackPanel>
            
            <ScrollViewer Grid.Row="2" Name="outputScrollViewer" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                    <TextBox x:Name="outputBox" AcceptsReturn="True" HorizontalAlignment="Stretch"/>
            </ScrollViewer>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>
</Page>
