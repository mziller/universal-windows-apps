<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="BasicMediaCasting.Scenario3"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BasicMediaCasting"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    Media casting using custom device picker.
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Name="video_panel">
                        <Border BorderBrush="#FF140044" BorderThickness="3">
                            <MediaElement x:Name="video" MinHeight="100" MaxWidth="600" HorizontalAlignment="Stretch" AreTransportControlsEnabled="True"/>
                        </Border>
                    </StackPanel>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="loadButton" Content="Load Video" Click="loadButton_Click"/>
                        <Button Name="disconnectButton" Content="Disconnect" Click="disconnectButton_Click"  Grid.Column="2" Visibility="Collapsed"/>
                    </Grid>

                    <StackPanel Orientation="Horizontal" Grid.Row="2">
                        <Button x:Name="watcherControlButton" Margin="0, 5, 0, 5" Content="Start Device Watcher" Click="watcherControlButton_Click"/>
                        <ProgressRing x:Name="progressRing" Margin="5" IsActive="False" Grid.Column="1"/>
                        <TextBlock x:Name="progressText" Margin="0, 10, 0, 0" Grid.Column="2"/>
                    </StackPanel>

                    <ScrollViewer Grid.Row="3" MaxHeight="400" MaxWidth="300" VerticalScrollMode="Auto" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Left">
                      <ListBox x:Name="castingDevicesList" MaxWidth="300" HorizontalAlignment="Left" SelectionChanged="castingDevicesList_SelectionChanged">
                        <!--Listbox content is bound to the FriendlyName field of our casting devices-->
                        <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=FriendlyName}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </ScrollViewer>

                </Grid>
            </ScrollViewer>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>
</Page>
