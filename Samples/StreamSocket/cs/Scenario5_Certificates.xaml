<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="StreamSocketSample.Scenario5" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:SDKTemplate" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
    <StackPanel>
      <TextBlock x:Name="InputTextBlock0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Margin="0,0,0,20">
          Prior to executing this scenario, execute .\Server\SetupServer.ps1 in
        an elevated PowerShell commandline to install and configure IIS. The
        script will generate a self-signed, 
        <Italic>untrusted</Italic>
          certificate with SN=www.fabrikam.com.
        <LineBreak/>
        <LineBreak/>
          The sample will attempt to connect to https://localhost, evaluate the
        certificate validity and display its properties. A certificate error is
        expected since the self-signed certificate is not trusted and issued to
        a different name. 
        <Bold>We strongly advise against ignoring SSL errors in your applications.</Bold>
      </TextBlock>
      <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}">Host name:</TextBlock>
      <!-- To connect to a remote host, first change HostNameForConnect IsEnabled="true" then add the Internet Client and/or 
                  Internet Client & Server capabilities within the App Manifest. -->
      <TextBox x:Name="HostNameForConnect" Text="localhost"/>
      <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}">Service name:</TextBlock>
      <TextBox x:Name="ServiceNameForConnect" IsEnabled="False" Text="443"/>
      <Button x:Name="ConnectSocket" Content="Connect" Click="ConnectSocket_Click"/>
      <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
          <VisualState x:Name="FullScreenLandscape"/>
          <VisualState x:Name="Filled"/>
          <VisualState x:Name="FullScreenPortrait"/>
          <VisualState x:Name="Snapped"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
    </StackPanel>
  </ScrollViewer>
</Page>