<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<!-- Windows Store App Layout -->

<Page x:Class="Microsoft.Samples.Devices.Sensors.Calibration.CalibrationBar" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:Microsoft.Samples.Devices.Sensors.Calibration" xmlns:common="using:SDKTemplate.Common" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
  <UserControl.Resources>
    <Style x:Key="LayoutRootStyle" TargetType="Panel">
      <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}"/>
      <Setter Property="ChildrenTransitions">
        <Setter.Value>
          <TransitionCollection>
            <EntranceThemeTransition/>
          </TransitionCollection>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="CalibrationPopupStyle" TargetType="Grid" BasedOn="{StaticResource LayoutRootStyle}">
      <Setter Property="Background" Value="{StaticResource ApplicationPageBackgroundThemeBrush}"/>
    </Style>
    <Style x:Key="GuidanceButtonStyle" TargetType="Button">
      <Setter Property="Foreground" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
      <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
      <Setter Property="FontWeight" Value="Normal"/>
      <Setter Property="FontSize" Value="40"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Center"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid x:Name="RootGrid" Margin="13,-5,0,0" Width="34" Height="34">
              <Grid Margin="0,-12,0,0">
                <TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="{StaticResource ListBoxItemPointerOverBackgroundThemeBrush}"/>
                <TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;"/>
                <ContentPresenter x:Name="Content" FontSize="20" Margin="11,12,0,0"/>
              </Grid>
              <Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="1.5"/>
              <Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeEndLineCap="Square" StrokeDashArray="1,1" Opacity="0" StrokeDashOffset="0.5"/>
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal"/>
                  <VisualState x:Name="PointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPointerOverBackgroundThemeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPointerOverForegroundThemeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPointerOverForegroundThemeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPressedForegroundThemeBrush}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                  <VisualState x:Name="Focused">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                      <DoubleAnimation Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Unfocused"/>
                  <VisualState x:Name="PointerFocused"/>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ShowGuidanceButtonStyle" TargetType="Button" BasedOn="{StaticResource GuidanceButtonStyle}">
      <Setter Property="Content" Value="&#xE015;"/>
    </Style>
    <Style x:Key="HideGuidanceButtonStyle" TargetType="Button" BasedOn="{StaticResource GuidanceButtonStyle}">
      <Setter Property="Content" Value="&#xE014;"/>
    </Style>
  </UserControl.Resources>
  <Popup x:Name="CalibrationPopup">
    <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="0,0,0,2">
      <Grid x:Name="CalibrationGrid" Style="{StaticResource CalibrationPopupStyle}">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="CalibrationGridTop" Grid.Row="0" Height="Auto">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <StackPanel x:Name="GuidanceButton" Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
            <Button x:Name="ShowGuidanceButton" Style="{StaticResource ShowGuidanceButtonStyle}" Visibility="Visible" Click="ShowGuidanceButton_Click"/>
            <Button x:Name="HideGuidanceButton" Style="{StaticResource HideGuidanceButtonStyle}" Visibility="Collapsed" Click="HideGuidanceButton_Click"/>
          </StackPanel>
          <TextBlock Text="In order to improve the accuracy of the information displayed, we need your help to calibrate your device. Expand to see how." x:Name="CalibrationText" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap"/>
          <Button x:Name="DismissPopup" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Content="Do not show again" Click="DismissPopup_Click"/>
        </Grid>
        <Image x:Name="Guidance" Stretch="Uniform" Source="Assets/mobius.png" Grid.Row="1" HorizontalAlignment="Center" Margin="20,20,20,20" Width="400"/>
      </Grid>
    </Border>
  </Popup>
</Page>