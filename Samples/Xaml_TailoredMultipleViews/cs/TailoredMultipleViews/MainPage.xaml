<Page
    x:Class="OneHandedUse_TailoredMultipleViews.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:OneHandedUse_TailoredMultipleViews"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <!-- This view is optimized for productivity using SplitView for content and commands placed at the top, right-->
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <!-- Within this view, the splitview is being optimized for window size using responsive techniques -->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="mainSplitview.DisplayMode" Value="Inline" />
                        <Setter Target="mainSplitview.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Button x:Name="SplitViewButton" Background="Transparent" Padding="0,-6" Margin="12" Click="SplitViewButton_Click">
            <FontIcon FontFamily="{ThemeResource ContentControlThemeFontFamily}" Glyph="&#x2261;" FontSize="32" Margin="0,-8,0,0"/>
        </Button>
        <TextBlock Margin="5" Style="{ThemeResource BodyTextBlockStyle}" Text="View optimized for productivity based on diagonal size of the integrated display. Take a look at App.xaml.cs where the appropriate view is being loaded." Foreground="Green"
                   RelativePanel.RightOf="SplitViewButton" TextWrapping="Wrap"/>
        <SplitView x:Name="mainSplitview" PaneBackground="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="0,5,0,0"
                    RelativePanel.Below="SplitViewButton" RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True" 
                   IsPaneOpen="False" DisplayMode="Overlay" OpenPaneLength="200">
            <SplitView.Pane>
                <ListView x:Name="list" SelectionChanged="list_SelectionChanged" HorizontalAlignment="Left">
                    <ListViewItem>
                        <StackPanel Orientation="Horizontal">
                            <AppBarButton Icon="Pictures" />
                            <TextBlock Text="Collection" VerticalAlignment="Center" Margin="5,0,0,0" />
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem>
                        <StackPanel Orientation="Horizontal">
                            <AppBarButton Icon="BrowsePhotos" />
                            <TextBlock Text="Albums" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem>
                        <StackPanel Orientation="Horizontal">
                            <AppBarButton Icon="Setting" />
                            <TextBlock Text="Settings" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </ListViewItem>
                </ListView>
            </SplitView.Pane>
            <ContentControl x:Name="mainContentPC" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5"/>
        </SplitView>       
    </RelativePanel>
    <Page.TopAppBar>
        <CommandBar x:Name="commands" ClosedDisplayMode="Compact">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Home" Label="Home" />
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Page.TopAppBar>
</Page>
