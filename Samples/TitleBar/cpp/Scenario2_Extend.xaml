<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario2_Extend"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:SDKTemplate"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid Margin="12,10,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                Extend view into title bar
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <TextBlock TextWrapping="Wrap">
                        When the view is extended into the title bar, the app can render into the space
                        normally occupied by the title bar.
                        The alpha channel of the title bar button background
                        is respected when the view is extended into the title bar.
                        <LineBreak/>
                        <LineBreak/>
                        The app can use the properties of the CoreApplicationViewTitleBar object
                        to make the app's custom title bar match the size and position of the system
                        title bar.
                    </TextBlock>
                    <CheckBox x:Name="ExtendView" Margin="0,10,0,0" Click="ExtendView_Click">Extend view into title bar</CheckBox>
                    <TextBlock Margin="0,10,0,0">
                        The view <Run x:Name="ReportFullScreenMode"/> full screen mode.
                    </TextBlock>
                    <Button x:Name="ToggleFullScreenModeButton" Margin="0,10,0,0" Click="ToggleFullScreenModeButton_Click">
                        <SymbolIcon x:Name="ToggleFullScreenModeSymbol" Symbol="FullScreen" />
                    </Button>
                    <CheckBox x:Name="EnableControls" Click="EnableControls_Click" Visibility="Collapsed">Enable controls in title bar</CheckBox>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
