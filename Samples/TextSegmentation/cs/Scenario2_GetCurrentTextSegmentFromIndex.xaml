<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="TextSegmentation.Scenario2_GetCurrentTextSegmentFromIndex"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="RootGrid" Margin="12,20,12,12">
            <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                    <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                        <Run>
                            For any text, it is possible to find the bounds between segments in that text.
                            The most commonly desired segments are 'word' and 'selection' segments.
                            Word Segments represent language-specific words in the text.
                            Selection segments are similar to word segments,
                            but represent the bounds between active selections.
                            (I.e., if you were actively selecting this text,
                            the bounds would identify where the selection would snap to.)
                        </Run>
                        <LineBreak/>
                        <LineBreak/>
                        <Run>
                            Both word and selection segments are language-specific
                            and employ that language's word breaking logic
                            to identify these segments within the text.
                            A language tag (e.g., en-US) specifies the language-behavior rules to use;
                            if no language tag is provided, language-neutral word-breaking rules are used.
                        </Run>
                        <LineBreak/>
                        <LineBreak/>
                        <Run>
                            This scenario allows you to enter a string of text and
                        specify a character index (0-based) within the string
                        and get the returned word or selection segment
                        that contains the index that was given.
                        </Run>
                    </TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="100" Margin="10" HorizontalAlignment="Left" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Input String: "></TextBlock>
                        <TextBox x:Name="inputStringBox" Margin="2" Height="40" Width="Auto" MinWidth="200" Padding="5" AutomationProperties.Name="Input String Box"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="100" Margin="10" HorizontalAlignment="Left" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Language Tag: "></TextBlock>
                        <TextBox x:Name="languageTagBox" Margin="2" Height="40" Width="Auto" MinWidth="100" Padding="5" AutomationProperties.Name="Language Tag Box"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 0 0 25">
                        <TextBlock Width="100" Margin="10" HorizontalAlignment="Left" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="Index: "></TextBlock>
                        <TextBox x:Name="indexBox" Margin="2" Height="40" Width="Auto" MinWidth="100" Padding="5" AutomationProperties.Name="Index Box"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="WordSegmentButton" Content="Word Segment" Margin="0,0,10,0" Click="WordSegmentButton_Click" AutomationProperties.Name="Words Segments Button" />
                        <Button x:Name="SelectionSegmentButton"  Content="Selection Segment" Margin="0,0,10,0" Click="SelectionSegmentButton_Click" AutomationProperties.Name="Selection Segments Button" />
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Grid>
     </Grid>
</Page>
