<!--
Copyright (c) Microsoft Corporation. All rights reserved
-->

<Page
    x:Class="SDKTemplate.Scenario1_Conversion"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKTemplate"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

  <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Grid x:Name="RootGrid" Margin="12,20,12,12">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <StackPanel Margin="0,0,0,10">
        <TextBlock Text="TextConversionGenerator Sample" Style="{StaticResource SampleHeaderTextStyle}"/>
      </StackPanel>

      <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
          <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
            Set a language tag
          </TextBlock>
          <TextBox Name="langTag" HorizontalAlignment="Left" VerticalAlignment="Center" Width="100" Margin="10,10,10,10" Grid.Row="1"/>
          <Button Name="createGeneratorButton" Content="Create Generator" VerticalAlignment="Center" Margin="10,10,10,30" Click="CreateGeneratorButton_Click" />

          <StackPanel Name="generatorOperationArea" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,10,10" Visibility="Collapsed">
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
              Choose a method
            </TextBlock>
            <ComboBox Name="methods" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,10,10" SelectionChanged="Methods_SelectionChanged" SelectedIndex="0">
              <ComboBox.Items>
                <ComboBoxItem Content="GetCandidatesAsync"/>
                <ComboBoxItem Content="GetCandidatesAsync(WithMaxCount)" Tag="needMaxCount"/>
              </ComboBox.Items>
            </ComboBox>
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap" Margin="0,50,0,0">
              Parameters
            </TextBlock>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Top">
              <TextBlock Text="Input" Style="{StaticResource BaseMessageStyle}" VerticalAlignment="Center" Margin="10,0,0,0"/>
              <TextBox Name="Input" VerticalAlignment="Center" Width="128" Margin="20,5,10,5"/>
            </StackPanel>
            <StackPanel Name="maxCandidatesArea" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Top" Visibility="Collapsed">
              <TextBlock Text="maxCandidates" Style="{StaticResource BaseMessageStyle}" VerticalAlignment="Center" Margin="10,0,0,0" />
              <TextBox Name="maxCandidates" VerticalAlignment="Center" Width="24" Margin="20,5,10,5" InputScope="Digits" />
            </StackPanel>
            <Button Name="executeButton" Content="Execute" VerticalAlignment="Center" Margin="10,10,10,30" Click="Execute_Click"/>
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
              Result
            </TextBlock>
            <ListView Name="resultView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="300" Margin="10,10,10,10"/>
          </StackPanel>
        </StackPanel>
      </ScrollViewer>

      <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
      <Border x:Name="ErrorBorder" Background="Red" Grid.Row="2"/>
      <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
    </Grid>
  </Grid>
</Page>
