<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SmsSendAndReceive.RegisterWithBackgroundTask"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SmsSendAndReceive"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="0,0,0,-52">
        <Grid x:Name="RootGrid" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Grid.Row="0" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                    <Run Text="Set filters and filter action type for a message. "/>
                    <LineBreak/>
                    <Run Text="Click the 'Register' button to register a background task for the SMS received system event. "/>
                    <LineBreak/>
                    <Run Text="The background task runs whenever the system receives an SMS. Click the 'Unregister' button to unregister the task."/>
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Width="520" Height="520">
                    <TextBlock Text="Filter Action Type:" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BasicTextStyle}" Grid.Row="0" Grid.Column="0"/>
                    <RadioButton x:Name="AcceptImmediatelyButton" GroupName="Action" Content="Accept Immediately" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <RadioButton x:Name="DropButton" GroupName="Action" Content="Drop" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <RadioButton x:Name="PeekButton" GroupName="Action" Content="Peek" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <RadioButton x:Name="AcceptButton" GroupName="Action" Content="Accept" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <TextBlock Text="Message Type:" HorizontalAlignment="Left" VerticalAlignment="Center"  Style="{StaticResource BasicTextStyle}" Grid.Row="1" Grid.Column="0"/>
                    <RadioButton x:Name="TextButton" GroupName="Type" Content="Text" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <RadioButton x:Name="AppButton" GroupName="Type" Content="App" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <RadioButton x:Name="WapButton" GroupName="Type" Content="Wap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <RadioButton x:Name="BroadcastButton" GroupName="Type" Content="Broadcast" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <RadioButton x:Name="VoicemailButton" GroupName="Type" Content="Voicemail" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    <Button x:Name="RegisterButton" Content="Register" Margin="5,5,0,0" Click="Register_Click"/>
                    <Button x:Name="UnregisterButton" Content="Unregister" Margin="5,5,0,0" Click="Unregister_Click"/>
                </StackPanel>
            </ScrollViewer>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <Border x:Name="ErrorBorder" Background="Red" Grid.Row="2"/>
            <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="12, 10, 12, 10" Visibility="Collapsed"/>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Style="{StaticResource BasicTextStyle}" VerticalAlignment="Center" Grid.Row="0" Grid.Column="0" Text="Task status:" Margin="14,629,84,-619" Grid.ColumnSpan="2" />
            <TextBlock x:Name="BackgroundTaskStatus" Style="{StaticResource BasicTextStyle}" Margin="37,642,51,-632" Grid.Row="0" TextWrapping="Wrap" Text="Unregistered" Grid.ColumnSpan="2" />
        </Grid>
    </Grid>
</Page>
