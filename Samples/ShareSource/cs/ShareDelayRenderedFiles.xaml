<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<local:SharePage
    x:Class="SDKTemplate.ShareDelayRenderedFiles"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKTemplate"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,10,12,12" HorizontalAlignment="Left" VerticalAlignment="Top" MinWidth="400">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Margin="0,0,0,10" Grid.Row="0">
            <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap" Text="Share delay rendered files" />
        </StackPanel>

        <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Stretch" Style="{StaticResource BasicTextStyle}">
                    Sometimes you may want provide content in a different format or size for sharing. However, you may not want to do the work to prepare content for sharing until the target app actually requests it. In such cases, you should use delayed rendering.
                    <LineBreak/><LineBreak/> To demonstrate, please choose an image to be shared. When data is requested by the target app, the image will be resized by the source app. Since image manipulation may take some time, the image processing is deferred until it's requested by the target app.
                    <LineBreak/>
                </TextBlock>
                <Button x:Name="SelectImageButton" Content="Select image" Margin="0,0,0,10" Click="SelectImageButton_Click"
                        AutomationProperties.AutomationId="SelectImageButton"/>
                <StackPanel x:Name="ShareStep" Visibility="Collapsed" HorizontalAlignment="Left">
                    <Image x:Name="ImageHolder" AutomationProperties.Name="A placeholder image" Source="Assets/placeholder-sdk.png" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                    <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" Text="The bitmap will not be rendered into the data package until the share target requests it." />
                    <Button x:Name="ShowUIButton" Content="Share" Margin="0,10,0,0" Click="ShowUIButton_Click"
                         AutomationProperties.AutomationId="ShareButton"/>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</local:SharePage>
